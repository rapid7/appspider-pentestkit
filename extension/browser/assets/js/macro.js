/* Author: Denis Podgurskii */
'use strict';

$(document).ready(function() {
    var editor = CodeMirror.fromTextArea(document.getElementById('macro_text'), {
        lineNumbers: true,
        mode: "application/xml",
        indentUnit: 6
    });
    editor.setSize('auto', '500px');

    var $form = $('#macro_form');
    $form.form({
        fields: {
            macro_url: {
                identifier: 'macro_url',
                rules: [{
                    type: 'regExp',
                    value: /^((http|https):\/\/){1}(([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\-]*[a-zA-Z0-9])\.)*([A-Za-z0-9]|[A-Za-z0-9][A-Za-z0-9\-]*[A-Za-z0-9])?([\/\?]{1}.*)?$/i,
                }]
            },
            min_duration: {
                identifier: 'min_duration',
                rules: [{
                    type: 'integer',
                    prompt: 'Please enter an integer value'
                }]
            },
        }
    });
    $form.form('set value', 'element_path', bgProxy.Recorder.elementPath);
    $form.form('set value', 'min_duration', bgProxy.Recorder.minDuration);

    $('.start').on('click', function() {
        $form.form('validate form');
        if (!$form.form('is valid')) return;

        var values = $form.form('get values');
        var message = {
            messageType: 'PenTestKitRecorder',
            data: {
                function: 'start',
                start_url: values['macro_url']
            }
        };
        chrome.runtime.sendMessage(message);
    });


    $('.export').on('click', function() {
        var $form = $('#macro_form');
        $form.form({
            fields: {
                min_duration: {
                    identifier: 'min_duration',
                    rules: [{
                        type: 'integer',
                        prompt: 'Please enter an integer value'
                    }]
                },
            }
        });
        if (!$form.form('is valid')) return;
        
        var values = $form.form('get values');
        var message = {
            messageType: 'PenTestKitRecorder',
            data: {
                function: 'export'
            }
        };
        values['useEncryption'] = false;
        chrome.runtime.sendMessage(message, function(response) {
            var res = AppSpiderMacroExporter.renderXml(response, values);
            $form.form('set value', 'macro_text', res);
            $("#macro_text").text
            editor.setValue(res);
        });

    });

    $('.resetmacro').on('click', function() {
        $form.form('set value', 'macro_text', '');
        editor.setValue('');
        var message = {
            messageType: 'PenTestKitRecorder',
            data: {
                function: 'reset'
            }
        };
        chrome.runtime.sendMessage(message);
    });

    $("input[name='element_path']").on('change', function() {
        bgProxy.Recorder.elementPath = this.value;
    });

    $("input[name='min_duration']").on('change', function() {

    });


    $('.copy').on('click', function() {
        CodeMirror.commands["selectAll"](editor);
        $("textarea").select();
        document.execCommand('copy');
    });

    $('.download').on('click', function() {
        var blob = new Blob([editor.getValue()], { type: 'text/plain' });
        var values = $form.form('get values');
        var fName = (values['macro_filename'] != "") ? values['macro_filename'] + ".rec" : "PenTestKitMacro.rec";

        var downloadLink = document.createElement("a");
        downloadLink.download = fName;
        downloadLink.innerHTML = "Download File";
        downloadLink.href = window.URL.createObjectURL(blob);
        downloadLink.click();
    });

});